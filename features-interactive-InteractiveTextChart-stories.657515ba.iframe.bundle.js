"use strict";(self.webpackChunk_react_stockcharts3_stories=self.webpackChunk_react_stockcharts3_stories||[]).push([[5657],{"./src/features/interactive/InteractiveTextChart.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>InteractiveTextChart_stories});var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react=__webpack_require__("../../node_modules/react/index.js"),defaultLocale=__webpack_require__("../../node_modules/d3-format/src/defaultLocale.js"),src_defaultLocale=__webpack_require__("../../node_modules/d3-time-format/src/defaultLocale.js"),ChartCanvas=__webpack_require__("../core/lib/ChartCanvas.js"),Chart=__webpack_require__("../core/lib/Chart.js"),XAxis=__webpack_require__("../axes/lib/XAxis.js"),YAxis=__webpack_require__("../axes/lib/YAxis.js"),CandlestickSeries=__webpack_require__("../series/lib/CandlestickSeries.js"),MouseCoordinateY=__webpack_require__("../coordinates/lib/MouseCoordinateY.js"),MouseCoordinateX=__webpack_require__("../coordinates/lib/MouseCoordinateX.js"),CrossHairCursor=__webpack_require__("../coordinates/lib/CrossHairCursor.js"),discontinuousTimeScaleProvider=__webpack_require__("../scales/lib/discontinuousTimeScaleProvider.js"),utils=__webpack_require__("../core/lib/utils/index.js"),GenericChartComponent=__webpack_require__("../core/lib/GenericChartComponent.js"),GenericComponent=__webpack_require__("../core/lib/GenericComponent.js"),noop=__webpack_require__("../core/lib/utils/noop.js"),HoverTextNearMouse=__webpack_require__("../interactive/lib/components/HoverTextNearMouse.js"),lib_utils=__webpack_require__("../interactive/lib/utils.js"),ChartDataUtil=__webpack_require__("../core/lib/utils/ChartDataUtil.js");class InteractiveText extends react.Component{constructor(){super(...arguments),this.calculateTextWidth=!0,this.isHover=moreProps=>{const{onHover}=this.props;if(void 0!==onHover&&void 0!==this.textWidth&&!this.calculateTextWidth){const{rect}=this.helper(moreProps,this.textWidth),{mouseXY:[x,y]}=moreProps;if(x>=rect.x&&y>=rect.y&&x<=rect.x+rect.width&&y<=rect.y+rect.height)return!0}return!1},this.drawOnCanvas=(ctx,moreProps)=>{const{bgFillStyle,bgStrokeWidth,bgStroke,textFill,fontFamily,fontSize,fontStyle,fontWeight,text}=this.props;if(this.calculateTextWidth){ctx.font=`${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;const{width}=ctx.measureText(text);this.textWidth=width,this.calculateTextWidth=!1}const{selected}=this.props,{x,y,rect}=this.helper(moreProps,this.textWidth??0);ctx.fillStyle=bgFillStyle,ctx.beginPath(),ctx.fillRect(rect.x,rect.y,rect.width,rect.height),selected&&(ctx.strokeStyle=bgStroke,ctx.lineWidth=bgStrokeWidth,ctx.strokeRect(rect.x,rect.y,rect.width,rect.height)),ctx.fillStyle=textFill,ctx.textBaseline="middle",ctx.textAlign="center",ctx.font=`${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`,ctx.beginPath(),ctx.fillText(text,x,y)},this.helper=(moreProps,textWidth)=>{const{position,fontSize}=this.props,{xScale,chartConfig:{yScale}}=moreProps,[xValue,yValue]=position,x=xScale(xValue),y=yScale(yValue);return{x,y,rect:{x:x-textWidth/2-fontSize,y:y-fontSize,width:textWidth+2*fontSize,height:2*fontSize}}}}componentDidUpdate(previousProps){this.calculateTextWidth=previousProps.text!==this.props.text||previousProps.fontStyle!==this.props.fontStyle||previousProps.fontWeight!==this.props.fontWeight||previousProps.fontSize!==this.props.fontSize||previousProps.fontFamily!==this.props.fontFamily}render(){const{selected,interactiveCursorClass}=this.props,{onHover,onUnHover}=this.props,{onDragStart,onDrag,onDragComplete}=this.props;return(0,jsx_runtime.jsx)(GenericChartComponent.P,{isHover:this.isHover,canvasToDraw:GenericComponent.wk,canvasDraw:this.drawOnCanvas,interactiveCursorClass,selected,onDragStart,onDrag,onDragComplete,onHover,onUnHover,drawOn:["mousemove","mouseleave","pan","drag"]})}}InteractiveText.defaultProps={type:"SD",fontWeight:"normal",tolerance:4,selected:!1};class EachText extends react.Component{constructor(props){super(props),this.handleHover=(_,moreProps)=>{this.state.hover!==moreProps.hovering&&this.setState({hover:moreProps.hovering})},this.handleDrag=(e,moreProps)=>{const{index,onDrag}=this.props;if(void 0===onDrag)return;const{mouseXY:[,mouseY],chartConfig:{yScale},xAccessor,mouseXY,plotData,xScale}=moreProps,{dx,dy}=this.dragStartPosition;onDrag(e,index,[xScale.invert(xScale((0,ChartDataUtil.M4)(xScale,xAccessor,mouseXY,plotData))-dx),yScale.invert(mouseY-dy)])},this.handleDragStart=(_,moreProps)=>{const{position}=this.props,{mouseXY}=moreProps,{chartConfig:{yScale},xScale}=moreProps,[mouseX,mouseY]=mouseXY,[textCX,textCY]=position,dx=mouseX-xScale(textCX),dy=mouseY-yScale(textCY);this.dragStartPosition={position,dx,dy}},this.handleHover=this.handleHover.bind(this),this.handleDragStart=this.handleDragStart.bind(this),this.handleDrag=this.handleDrag.bind(this),this.isHover=lib_utils.FK.bind(this),this.saveNodeType=lib_utils.Ap.bind(this),this.state={hover:!1}}render(){const{position,bgFill,bgStroke,bgStrokeWidth,textFill,fontFamily,fontSize,fontWeight,fontStyle,text,hoverText,selected,onDragComplete}=this.props,{hover}=this.state,hoverHandler={onHover:this.handleHover,onUnHover:this.handleHover},{enable:hoverTextEnabled,selectedText:hoverTextSelected,text:hoverTextUnselected,...restHoverTextProps}=hoverText;return(0,jsx_runtime.jsxs)("g",{children:[(0,jsx_runtime.jsx)(InteractiveText,{ref:this.saveNodeType("text"),selected:selected||hover,interactiveCursorClass:"react-financial-charts-move-cursor",...hoverHandler,onDragStart:this.handleDragStart,onDrag:this.handleDrag,onDragComplete,position,bgFillStyle:bgFill,bgStroke:bgStroke||textFill,bgStrokeWidth,textFill,fontFamily,fontStyle,fontWeight,fontSize,text}),(0,jsx_runtime.jsx)(HoverTextNearMouse.r,{show:hoverTextEnabled&&hover,...restHoverTextProps,text:selected?hoverTextSelected:hoverTextUnselected})]})}}EachText.defaultProps={bgStrokeWidth:1,selected:!1,hoverText:{...HoverTextNearMouse.r.defaultProps,enable:!0,bgHeight:"auto",bgWidth:"auto",text:"Click to select object"}};class InteractiveText_InteractiveText extends react.Component{constructor(props){super(props),this.handleDraw=(e,moreProps)=>{const{enabled}=this.props;if(enabled){const{mouseXY:[,mouseY],chartConfig:{yScale},xAccessor,currentItem}=moreProps,{defaultText,onChoosePosition}=this.props;if(void 0!==onChoosePosition){onChoosePosition(e,{...defaultText,position:[xAccessor(currentItem),yScale.invert(mouseY)]},moreProps)}}},this.handleDragComplete=(e,moreProps)=>{const{override}=this.state;if((0,utils.O9)(override)){const{textList}=this.props,newTextList=textList.map((each,idx)=>{const selected=idx===override.index;return selected?{...each,position:override.position,selected}:{...each,selected}});this.setState({override:null},()=>{const{onDragComplete}=this.props;void 0!==onDragComplete&&onDragComplete(e,newTextList,moreProps)})}},this.handleDrag=(_,index,position)=>{this.setState({override:{index,position}})},this.terminate=lib_utils.MH.bind(this),this.saveNodeType=lib_utils.Ap.bind(this),this.getSelectionState=(0,lib_utils._W)("textList").bind(this),this.state={}}render(){const{textList,defaultText,hoverText}=this.props,{override}=this.state;return(0,jsx_runtime.jsxs)("g",{children:[textList.map((each,idx)=>{const defaultHoverText=InteractiveText_InteractiveText.defaultProps.hoverText,props={...defaultText,...each,hoverText:{...defaultHoverText,...hoverText,...each.hoverText||{}}};return(0,jsx_runtime.jsx)(EachText,{ref:this.saveNodeType(idx),index:idx,interactive:!0,...props,selected:each.selected,position:(0,lib_utils.Ur)(override,idx,"position",each.position),onDrag:this.handleDrag,onDragComplete:this.handleDragComplete,edgeInteractiveCursor:"react-financial-charts-move-cursor"},idx)}),(0,jsx_runtime.jsx)(GenericChartComponent.P,{onClick:this.handleDraw,canvasToDraw:GenericComponent.wk,drawOn:["mousemove","pan"]})]})}}InteractiveText_InteractiveText.defaultProps={onSelect:noop.l,defaultText:{bgFill:"#D3D3D3",bgOpacity:1,bgStrokeWidth:1,textFill:"#F10040",fontFamily:"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif",fontSize:12,fontStyle:"normal",fontWeight:"normal",text:"Lorem ipsum..."},hoverText:{...HoverTextNearMouse.r.defaultProps,enable:!0,bgHeight:"auto",bgWidth:"auto",text:"Click to select object",selectedText:""},textList:[]},InteractiveText_InteractiveText.contextType=Chart.u;var DrawingObjectSelector=__webpack_require__("../interactive/lib/DrawingObjectSelector.js"),withSize=__webpack_require__("../utils/lib/withSize.js"),withDeviceRatio=__webpack_require__("../utils/lib/withDeviceRatio.js"),data=__webpack_require__("./src/data/index.ts");class InteractiveTextChart extends react.Component{constructor(props){super(props),this.interactiveNodes={},this.onKeyPress=e=>{switch(e.key.toLowerCase()){case"escape":this.setState({enableText:!1});break;case"delete":case"backspace":this.setState(prevState=>({textElements:Array.isArray(prevState.textElements)?prevState.textElements.filter(text=>!text.selected):[]}));break;case"x":this.setState({enableText:!0})}},this.onChoosePosition=(e,newText,_moreProps)=>{this.setState(prevState=>({enableText:!1,textElements:[...Array.isArray(prevState.textElements)?prevState.textElements:[],newText],showModal:!0,editingIndex:prevState.textElements.length,editingText:newText.text}))},this.onTextDragComplete=(e,newTextElements,_moreProps)=>{this.setState({textElements:newTextElements})},this.handleSelection=(e,interactives,_moreProps)=>{const newState=this.toObject(interactives,each=>[1===each.chartId?"textElements":`${each.type.toLowerCase()}_${each.chartId}`,each.objects||[]]);this.setState(newState)},this.handleDoubleClick=(e,interactives,_moreProps)=>{const selectedElements=interactives.flatMap(interactive=>interactive.objects?.filter(obj=>obj.selected)||[]);if(selectedElements.length>0){const selectedElement=selectedElements[0],index=this.state.textElements.findIndex(el=>el.position&&selectedElement.position&&el.position[0]===selectedElement.position[0]&&el.position[1]===selectedElement.position[1]);-1!==index&&this.setState({showModal:!0,editingIndex:index,editingText:selectedElement.text||"Lorem ipsum..."})}},this.handleModalSave=()=>{const{editingIndex,editingText}=this.state;null!==editingIndex&&this.setState(prevState=>({textElements:prevState.textElements.map((el,idx)=>idx===editingIndex?{...el,text:editingText}:el),showModal:!1,editingIndex:null,editingText:""}))},this.handleModalCancel=()=>{this.setState({showModal:!1,editingIndex:null,editingText:""})},this.state={enableText:!1,textElements:[],showModal:!1,editingIndex:null,editingText:""},this.saveInteractiveNodes=this.saveInteractiveNodes.bind(this),this.getInteractiveNodes=this.getInteractiveNodes.bind(this)}saveInteractiveNodes(type,chartId){return node=>{this.interactiveNodes||(this.interactiveNodes={});const key=`${type}_${chartId}`;(node||this.interactiveNodes[key])&&(this.interactiveNodes={...this.interactiveNodes,[key]:{type,chartId,node}})}}getInteractiveNodes(){return this.interactiveNodes}componentDidMount(){document.addEventListener("keydown",this.onKeyPress)}componentWillUnmount(){document.removeEventListener("keydown",this.onKeyPress)}toObject(interactives,keyMapper){const obj={};return interactives.forEach(each=>{const[key,value]=keyMapper(each);obj[key]=value}),obj}render(){const{data,height,width,ratio}=this.props,{enableText,textElements,showModal,editingText}=this.state,safeTextElements=Array.isArray(textElements)?textElements:[],xScaleProvider=discontinuousTimeScaleProvider.A.inputDateAccessor(d=>d.date),{data:chartData,xScale,xAccessor,displayXAccessor}=xScaleProvider(data),xExtents=[xAccessor(chartData[chartData.length-200]),xAccessor(chartData[chartData.length-1])];return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("div",{style:{padding:"10px",borderBottom:"1px solid #ccc",backgroundColor:"#f5f5f5",display:"flex",gap:"10px",alignItems:"center"},children:[(0,jsx_runtime.jsx)("button",{onClick:()=>this.setState({enableText:!0}),style:{backgroundColor:enableText?"#007bff":"#fff",color:enableText?"#fff":"#000",border:"1px solid #ccc",padding:"8px 12px",cursor:"pointer"},children:"Add Text (X)"}),(0,jsx_runtime.jsx)("button",{onClick:()=>this.setState({enableText:!1}),style:{backgroundColor:enableText?"#fff":"#007bff",color:enableText?"#000":"#fff",border:"1px solid #ccc",padding:"8px 12px",cursor:"pointer"},children:"Select Mode"}),(0,jsx_runtime.jsxs)("div",{style:{marginLeft:"20px",color:"#666"},children:["Mode: ",enableText?"Adding Text":"Select"," | Text Elements: ",safeTextElements.length," | ESC: Cancel | DEL: Delete Selected | Selector: ",enableText?"DISABLED":"ENABLED"]})]}),(0,jsx_runtime.jsxs)(ChartCanvas.v,{height,width,ratio,margin:{left:70,right:70,top:20,bottom:30},data:chartData,displayXAccessor,seriesName:"Data",xScale,xAccessor,xExtents,children:[(0,jsx_runtime.jsxs)(Chart.t,{id:1,yExtents:d=>[d.high,d.low],children:[(0,jsx_runtime.jsx)(XAxis.W,{}),(0,jsx_runtime.jsx)(YAxis.h,{}),(0,jsx_runtime.jsx)(CandlestickSeries.H,{}),(0,jsx_runtime.jsx)(InteractiveText_InteractiveText,{ref:this.saveInteractiveNodes("InteractiveText",1),enabled:enableText,onChoosePosition:this.onChoosePosition,onDragComplete:this.onTextDragComplete,textList:safeTextElements}),(0,jsx_runtime.jsx)(MouseCoordinateY.R,{displayFormat:(0,defaultLocale.GP)(".2f")}),(0,jsx_runtime.jsx)(MouseCoordinateX.Y,{displayFormat:(0,src_defaultLocale.DC)("%Y-%m-%d")}),(0,jsx_runtime.jsx)(DrawingObjectSelector.D,{enabled:!enableText,getInteractiveNodes:this.getInteractiveNodes,drawingObjectMap:{InteractiveText:"textList"},onSelect:this.handleSelection,onDoubleClick:this.handleDoubleClick})]}),(0,jsx_runtime.jsx)(CrossHairCursor.H,{})]}),showModal&&(0,jsx_runtime.jsx)("div",{style:{position:"fixed",top:0,left:0,width:"100%",height:"100%",backgroundColor:"rgba(0, 0, 0, 0.5)",display:"flex",justifyContent:"center",alignItems:"center",zIndex:1e3},children:(0,jsx_runtime.jsxs)("div",{style:{backgroundColor:"white",padding:"20px",borderRadius:"8px",boxShadow:"0 4px 6px rgba(0, 0, 0, 0.1)",minWidth:"300px"},children:[(0,jsx_runtime.jsx)("h3",{style:{margin:"0 0 15px 0"},children:"Edit Text"}),(0,jsx_runtime.jsx)("textarea",{value:editingText,onChange:e=>this.setState({editingText:e.target.value}),style:{width:"100%",height:"100px",padding:"8px",border:"1px solid #ccc",borderRadius:"4px",resize:"vertical",fontFamily:"Arial, sans-serif"},autoFocus:!0}),(0,jsx_runtime.jsxs)("div",{style:{marginTop:"15px",display:"flex",gap:"10px",justifyContent:"flex-end"},children:[(0,jsx_runtime.jsx)("button",{onClick:this.handleModalCancel,style:{padding:"8px 16px",border:"1px solid #ccc",backgroundColor:"white",borderRadius:"4px",cursor:"pointer"},children:"Cancel"}),(0,jsx_runtime.jsx)("button",{onClick:this.handleModalSave,style:{padding:"8px 16px",border:"none",backgroundColor:"#007bff",color:"white",borderRadius:"4px",cursor:"pointer"},children:"Save"})]})]})})]})}}const interactive_InteractiveTextChart=(0,data.p)()((0,withSize.U)({style:{minHeight:600}})((0,withDeviceRatio.O)()(InteractiveTextChart))),InteractiveTextChart_stories={title:"Interactive/Interactive Text",component:interactive_InteractiveTextChart,parameters:{layout:"fullscreen"}},Default={render:()=>(0,jsx_runtime.jsx)(interactive_InteractiveTextChart,{})},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: () => <InteractiveTextChart />\n}",...Default.parameters?.docs?.source}}}}}]);